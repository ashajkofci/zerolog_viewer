name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., v1.0.0)'
        required: true
        default: 'v0.1.0'
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run unit tests
      run: |
        python -m pytest test_zerolog_viewer.py -v
    
    - name: Run CLI tests
      run: |
        python -m pytest test_cli.py -v

  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: test
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: zerolog_viewer
            asset_name: zerolog_viewer-linux-amd64
          - os: windows-latest
            artifact_name: zerolog_viewer.exe
            asset_name: zerolog_viewer-windows-amd64.exe
          - os: macos-latest
            artifact_name: zerolog_viewer
            asset_name: zerolog_viewer-macos-amd64
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Build executable with PyInstaller (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        pyinstaller --onefile --windowed --name zerolog_viewer zerolog_viewer.py
    
    - name: Build executable with PyInstaller (Windows)
      if: runner.os == 'Windows'
      run: |
        pyinstaller --onefile --windowed --name zerolog_viewer zerolog_viewer.py
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: dist/${{ matrix.artifact_name }}
    
    - name: Get version
      id: get_version
      shell: bash
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.get_version.outputs.version }}
        name: Release ${{ steps.get_version.outputs.version }}
        draft: false
        prerelease: false
        files: |
          dist/${{ matrix.artifact_name }}
        body: |
          ## ZeroLog Viewer ${{ steps.get_version.outputs.version }}
          
          Cross-platform JSONL log viewer with the following features:
          - Read JSONL files with automatic column sizing
          - Time-based indexing and sorting
          - Sort by any column
          - Search functionality
          - Color-coded log levels
          
          ### Downloads
          - Linux: zerolog_viewer-linux-amd64
          - Windows: zerolog_viewer-windows-amd64.exe
          - macOS: zerolog_viewer-macos-amd64
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
